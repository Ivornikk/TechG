version: '3'

networks:
  dev:

services:

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - ./nginx/certs:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
    networks:
      - dev
      
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - './nginx.conf:/etc/nginx/nginx.conf'
    enrtypoint: >
      sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /usr/share/nginx/html; done"
    networks:
      - dev
    
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dev
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./server
    networks:
      - dev
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      SECRET_KEY: ${SECRET_KEY}
      NODE_ENV: production
    depends_on:
      - postgres
      
  frontend:
    build:
      context: ./client/techg
    expose:
      - "3000"
    networks:
      - dev

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - dev

volumes:
  postgres_data: